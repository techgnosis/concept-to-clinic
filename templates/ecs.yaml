AWSTemplateFormatVersion: 2010-09-09
Description: c2c ecs cluster
Resources:

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ingress from the load balancer
      VpcId: vpc-93f442eb
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
          FromPort: 0
          ToPort: 65535
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ingress from the outside world
      VpcId: vpc-93f442eb
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: c2c

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init: # order: packages, groups, users, sources, files, commands, services
        configSets:
          ecsconfig:
            - configure
        configure:
          commands:
            01createecsconfig:
              command: mkdir -p /etc/ecs && touch /etc/ecs/ecs.config
            02clustersetup:
              command: echo ECS_CLUSTER=c2c >> /etc/ecs/ecs.config
    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      IamInstanceProfile: arn:aws:iam::113913174193:instance-profile/concept-to-clinic-ecs-instance-profile
      ImageId: ami-20ff515a
      InstanceType: t2.medium
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --configsets ecsconfig --resource LaunchConfiguration --region ${AWS::Region}

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: LaunchConfiguration
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      VPCZoneIdentifier:
        - subnet-b5a337d1
        - subnet-b03fc29f
      MinSize: 2
      MaxSize: 2
      DesiredCapacity: 2
      Tags:
        - Key: Name
          Value: c2c-ecs
          PropagateAtLaunch: true
Outputs:
  LoadBalancerSecurityGroup:
    Description: Security group ID of the security group that new ALBs should use
    Value: !Ref LoadBalancerSecurityGroup
    Export:
      Name: c2c-ecs-loadbalancersecuritygroup
